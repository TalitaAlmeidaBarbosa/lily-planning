package com.example.applilyplanning;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.provider.MediaStore;
import android.util.Base64;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;

import com.example.applilyplanning.model.Imagem;
import com.squareup.picasso.Picasso;

import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import java.util.List;

public class GridViewAdaptador extends ArrayAdapter<Imagem> {
    List<Imagem> items_list = new ArrayList<>();
    Context context;

    public GridViewAdaptador(@NonNull Context context, int resource, @NonNull List<Imagem> objects){
        super(context, resource, objects);
        this.items_list = objects;
        this.context = context;
    }

    // retorna tamanho da lista
    @Override
    public int getCount() {
        return this.items_list.size();
    }

    // retornar id do objeto
    @Override
    public long getItemId(int pos) {
        return pos;
    }

    @SuppressLint("ResourceType")
    @Override
    public View getView(int pos, View view, ViewGroup viewGroup) {

        View v = view;

        if (v == null) {
            LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            v = inflater.inflate(R.layout.upload, null);
        }

        ImageView imageView = v.findViewById(R.id.ivFotos);
        String imageTest = "";

        String test = items_list.get(pos).getImagem().substring(21);

        byte[] bytes = Base64.decode(test, Base64.DEFAULT);

        Bitmap bitmap= BitmapFactory.decodeByteArray(bytes,0,bytes.length);

        imageView.setImageBitmap(bitmap);
        return v;
    }

}

